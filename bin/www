const app = require('../app');
const debug = require('debug')('Library:server');
const http = require('http');
const logger = require('../config/logger');
const port = parseInt(process.env.PORT || '3000', 10);

app.set('port', port);

const server = http.createServer(app);

server.listen(port);
server.on('error', onError);
server.on('listening', onListening);

const unexpectedErrorHandler = (error) => {
  logger.error(error);
  exitHandler();
};

process.on('uncaughtException', unexpectedErrorHandler);
process.on('unhandledRejection', unexpectedErrorHandler);

function onError(error) {
  if (error.syscall !== 'listen') throw error;
  switch (error.code) {
    case 'EACCES':
      console.error(`Error: Insufficient permissions. Port ${port} requires elevated privileges.`);
      process.exit(1);
    case 'EADDRINUSE':
      console.error(`Port ${port} is already in use`);
      process.exit(1);
    default:
      throw error;
  }
}

/**
 * Event listener for HTTP server "listening" event.
 */

function onListening() {
  const address = server.address();
  debug(`Listening on Port ${address.port}`);
  console.log(`Listening on Port ${address.port}`);
}

